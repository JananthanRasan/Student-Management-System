<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>