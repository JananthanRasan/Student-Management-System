<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>